h2 暗号への応用
p 本章では楕円曲線が暗号分野でどのように使われているかについて説明する．


h3#c3s1 離散対数問題
p
	| 整数\(g,x,y\)と素数\(p\)について\[y=g^x \mod p\]
	| を\(g,x,p\)から計算することは簡単である．では，\(g,y,p\)から\(x\)を計算することはできるだろうか．これは一般に困難とされており，この問題を
	strong 離散対数問題
	| （Discrete Logarithm Problem）と呼ぶ．\(x\)を効率的に求める公式のようなものは発見されておらず，\(p\)が十分に大きいなどの条件の下では，コンピュータを使っても現実的に解けないほど計算に非常に時間がかかる．そのため，離散対数問題は困難な問題であると仮定されており，このことを離散対数仮定と呼ぶ．楕円曲線暗号（を使った暗号技術）はこの仮定の下で安全性が保障されている．
	span.footnote いくらかの条件の下では楕円曲線上の離散対数問題は現実的に解くことができ，本稿で実装した程度の単純な楕円曲線を暗号として利用するのは危険である．実用的にはFIPSやRFCで安全であると宣言されている曲線を使うのが好ましい．
		br
		| FIPS 186-4：
		a(href="https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-4.pdf") https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-4.pdf
		br
		| RFC 7748：
		a(href="https://tools.ietf.org/html/rfc7748") https://tools.ietf.org/html/rfc7748

p
	| 一方，楕円曲線における離散対数問題とは，ある楕円曲線\(E(\mathbb{Z}_{p})\)上の点\(P,Q\)が渡されたとき，\[Q=nP\]
	| を満たすような整数\(n\)を見つけることを指す．\(P\)と\(n\)から\(Q\)を求めるのは簡単であったのに，\(P\)と\(Q\)から\(n\)を求めるのは難しいのである．この問題も困難であると仮定されており，現状では楕円曲線暗号の安全性を保障する要となっている．本章では，この安全性を利用して設計された応用例として，楕円曲線ディフィー・ヘルマン鍵共有プロトコルを紹介しようと思う．しかしその前に，このプロトコルが必要となった根源にあたる鍵配送問題について簡単に説明する．


h3#c3s2 鍵配送問題
p 暗号化や復号化には秘密の鍵が使われるが，これは絶対に第三者には知られてはいけない．ある二人が通信を暗号化するとき，送信側は鍵を使って暗号化，受信側は同じ鍵を使って復号化するのであるが，そのためには二人が同じ鍵を事前に共有しておく必要がある．このような状況においては，通信経路に常に盗聴者がいる安全でない通信を想定しなくてはならない．
p この通信経路で鍵を送ってしまうと，盗聴者は鍵を知ることができるため以降に送られる暗号文もすべて盗聴者に復号化されてしまう．また，鍵自体を暗号化しても，その暗号化に利用した鍵を事前共有する必要があり，意味がない．このような問題を鍵配送問題と呼ぶ．「ディフィー・ヘルマン鍵共有」と呼ばれるプロトコルでは，この問題を解決し，安全でない通信経路の上で安全に鍵を共有することができる．次節では，ディフィー・ヘルマン鍵共有を楕円曲線で設計した「楕円曲線ディフィー・ヘルマン鍵共有」について説明する．


h3#c3s3 楕円曲線ディフィー・ヘルマン鍵共有
p
	| 楕円曲線ディフィー・ヘルマン鍵共有プロトコルは次のような手順に従い，AさんとBさんが鍵を生成・共有する．
	ol
		li AさんとBさんは使用する楕円曲線\(EC\)と，その上の点\(G\)（ベースポイント）を共有する．
		li Aさんは秘密鍵\(d_A\)を用意し，公開鍵\(Q_A=d_A G\)を計算する．
		li Bさんは秘密鍵\(d_B\)を用意し，公開鍵\(Q_B=d_B G\)を計算する．
		li AさんはBさんに\(Q_A\)を渡し，BさんはAさんに\(Q_B\)を渡す．
		li 二人は共通の秘密鍵\(Q=d_A Q_B=d_B Q_A=d_A d_B G\)を計算できる．
	| このようにして，安全に鍵を生成することができる．安全性の根拠は，\(d_A G\)と\(d_B G\)から\(d_A d_B G\)を計算するのが困難であるという離散対数問題の仮定にある．下の図を見ると分かるように，通信の過程では\(G，d_A G，d_B G\)しか送信されない．
	figure
		img(src="assets/elliptic/dh.png")
		figcaption ディフィー・ヘルマン鍵共有プロトコル
	| 反対に，\(d_A G\)と\(d_B G\)の組から\(d_A d_B G\)が計算できてしまうと安全性は失われてしまう．次節では，安全でない楕円曲線を利用した際に，これを解読する方法について説明する．


h3#c3s4 baby-step giant-stepアルゴリズム
p
	| \(Q=dG\)について，\(Q,G\)から\(d\)を求めるには\(d\)を1から順に当てはめていけば良いのだが，この方法では\(d\)が大きいときに現実的な時間内に解くことができない．本節で説明するbaby-step giant-stepアルゴリズムでは，この試行回数を削減することができる．
	span.footnote 列挙法では時間計算量は\(O(n)\)であるのに対し，baby-step giant-stepでは\(O(\sqrt{n}\log{n})\)で計算できる．
	| まず，対象とする楕円曲線の位数を\(n\)とし，この根を\(m=n\)とおく．ここで，次の式を満たすような\(i \geq 0\)と\(j < m\)が分かったとする．\[d=im+j\]
	| このとき，\(Q=dG=(im+j)\)Gより，\[Q-imG=jG\]
	| を満たすはずである．このような\(i,j\)の組を探すのがbaby-step giant-stepアルゴリズムである．
p この他にもPollard’s rhoアルゴリズムなど，計算量が改善されたり特定の状況で利用できる解読法が存在するが，あくまでも総当たり的，確率的な手法であり，安全な楕円曲線に対して現在の技術では現実的な時間内に解くことはできない．このように，離散対数問題は現代の暗号技術を支える仮定の１つとなっているのである．

