h2 SATソルバとはなにか
p ここではSATソルバとは何かについて説明していきます.
p SATソルバ(Boolean satisfiability solver)を一言で言うならば「命題論理式の充足可能性判定を行うアルゴリズム, 及びその実装」のことです. 命題論理式を入力に受け取り, 充足可能である場合は充足するような真偽値割当てを出力し, 充足不可能な場合は充足不可能である旨を出力します. (詳しい話は 3. SATソルバの理論 で説明していきます.このセクションではきもちを書いていきます)
p
  | 次のような論理式があったとします.
  :math
    \[
      (x_1 \lor x_2) \land (x_1 \lor \lnot x_2) \land (x_3 \lor x_4) \land (\lnot x_3 \lor \lnot x_4) \land (x_1 \lor \lnot x_3) \land (\lnot x_2 \lor \lnot x_4)
    \]
  | この論理式のリテラル:x1,x2,x3,x4に次のような割当てを行うことでこの論理式は真になります.
  :math
    \[
      (x_1,x_2,x_3,x_4)=(T,T,T,F) または (T,F,F,T), (T,F,T,F)
    \]
  | これが実際に真になっているかどうか確認してみます.
  :math
    \begin{eqnarray}
      &&(x_1,x_2,x_3,x_4)=(T,T,T,F) とすると, \\
      &&(x_1x_2)(x_1x_2)(x_3x_4)(x_3x_4)(x_1x_3)(x_2x_4) \\
      &=&(TT)(TF)(TF)(FT)(TF)(FT) \\
      &=&TTTTTT \\
      &=&T
    \end{eqnarray}
  | この割当てによって論理式が真になることが確認できました. (他の割当てでも試してみて下さい！)このように, ある論理式
  :inmath
    \(\Omega\)
  | がある割当て
  :inmath
    \(I\)
  | によって真になるとき, 「論理式は割当て
  :inmath
    \(I\)
  | によって充足する」といいます. 現代では様々な場面で, このように論理式が与えられてそれが充足するような割当てを見つけたいという欲求が出てきます. 
  p ところでこの割当てはどのように見つければ良いのでしょうか. 例に出したもの程度の規模ならば, 人力も選択肢に入るかもしれません. しかし, 実際に出くわす論理式は大規模なものがほとんどでしょう. こういったときにSATソルバは活躍します.

.frame
  p
    | 「SATソルバとはなにか」のまとめ
    ul
      li 論理式が与えられたとき, それが真になるような割当てを知りたい場面が多々ある
      li SATソルバは, 論理式が充足可能かどうかを判定し, 充足可能な場合は割当てを見つけてくれる

h3 各章のあらまし
p 「2 SATソルバの利用」では, オープンソースのSATソルバ "MiniSat" の利用方法を説明します. 「3 SATソルバの理論」では, SATソルバの最も基本的なアルゴリズムの説明をします. 「4 SATソルバの実装」では, 3章で説明した理論を使って実際にSATソルバを実装します. 「5 SATソルバの応用」では, SATソルバを使っていくつかの問題を解いたりしてみます. 「Reference」では, これを書くにあたって参照した文書や, おすすめする文書を紹介します.
